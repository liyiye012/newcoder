class Flip {
public:
    vector<vector<int> > flipChess(vector<vector<int> > A, vector<vector<int> > f) {
        // write code here
            int x, y,x1,y1,x2,y2,x3,y3,x4,y4;
        vector<vector<int> >  d;
        d = { {0,1},{0,-1},{1,0},{-1,0} };
    int m= A.size();
    int n = f.size();
    for (int i = 0; i < n; i++)
    {
        x = f[i][0] - 1;
        y = f[i][1] - 1;
        x1 = d[0][0] + x;
        x2= d[1][0] + x;
        y1 = d[0][1] + y;
        y2 = d[1][1] + y;
        x3 = d[2][0] + x;
        x4 = d[3][0] + x;
        y3 = d[2][1] + y;
        y4 = d[3][1] + y;
        if (x1 >=0 && x1 < m  &&y1>=0 && y1 < m) { A[x1][y1] = ((A[x1][y1] + 1) % 2);   }
        if (x2>=0 && x2<m&&y2>=0 && y2<m){ A[x2][y2] = ((A[x2][y2] +1) % 2);  }
        if (x3>=0 && x3<m&&y3>=0 && y3<m) { A[x3][y3] = ((A[x3][y3] + 1) % 2);      }
        if (x4>=0 && x4<m&&y4>=0 && y4<m) { A[x4][y4] = ((A[x4][y4] + 1) % 2);      }
         
    }
        return A;
    }
};
